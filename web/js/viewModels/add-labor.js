define(["knockout","jquery","utils/dom","ojs/ojcore","ojs/ojarraydataprovider","ojs/ojselectcombobox","ojs/ojinputtext","ojs/ojdatetimepicker","ojs/ojmessages","ojs/ojvalidationgroup","ojs/ojformlayout"],function(t,e,i,a,s){return function(){return new class{constructor(){this.activityId=t.observable(""),this.laborItemId=t.observable(""),this.startTime=t.observable(""),this.endTime=t.observable(""),this.selectMessagesCustomBillingType=t.observable([]),this.selectMessagesCustomBillingItem=t.observable([]),this.dataValidation={detail:"Enter a valid value.",summary:"",severity:"error"},this.isStartTimeValid=t.observable(!0),this.isEndTimeValid=t.observable(!0),this.isSubmitDisabled=t.pureComputed(()=>!(this.isStartTimeValid()&&this.isEndTimeValid())),this.laborItemDescription=t.pureComputed(()=>this.laborItemId()?this.laborItemEnumCollection.get(this.laborItemId()).get("label"):""),this.durationHours=t.pureComputed(()=>{if(!this.startTime()||!this.endTime())return"";let t=(this.dateTimeConverter.compareISODates(this.dateTimeConverter.parse(this.endTime()),this.dateTimeConverter.parse(this.startTime()))/1e3/60/60).toFixed(2);return t<0?+t+24:t}),this.handleActivated=function(t){this._controller=t.valueAccessor().params.app,this.laborActivityEnumCollection=this._controller.laborActivityEnumCollection,this.laborItemEnumCollection=this._controller.laborItemEnumCollection,this.dateTimeConverter=this._controller.dateTimeConverter,this.activityEnumArray=new s(this.laborActivityEnumCollection.map(t=>({value:t.get("id"),label:t.get("text")})),{keyAttributes:"value"}),this.activityId(this.activityEnumArray.data[0].value),this.laborItemEnumArray=new s(this.laborItemEnumCollection.map(t=>({value:t.get("id"),label:t.get("label")})),{keyAttributes:"value"}),this.laborItemId(this.laborItemEnumArray.data[0].value)},this.handleAttached=function(t){},this.handleBindingsApplied=function(t){i.resetScrolling()},this.handleDetached=function(t){this.activityId(""),this.laborItemId("")},this.startTime.subscribe(()=>{document.getElementById("endTimeEl").validate()}),this.appMessages=t.observable(),this.durationValidator={validate:t=>{let e=this.startTime();if(!t&&!e)throw new a.ValidatorError("Time should be indicated","Please, input time.");t<e&&this.appMessages([{summary:"Info",detail:"Overnight",severity:a.Message.SEVERITY_TYPE.INFO}])}},this.onStartTimeValidChanged=(t=>{this.isStartTimeValid("valid"===t.detail.value)}),this.onEndTimeValidChanged=(t=>{this.isEndTimeValid("valid"===t.detail.value)})}addLabor(){const t=this._controller.checkValidationGroup(),e=this._validateBillingType(this.activityId),i=this._validateBillingItem(this.laborItemId);t&&!e&&this.selectMessagesCustomBillingType([this.dataValidation]),t&&!i&&this.selectMessagesCustomBillingItem([this.dataValidation]),t&&e&&i&&(this._controller.addLabor({activityId:this.activityId(),itemId:this.laborItemId(),startTime:this.startTime(),endTime:this.endTime()}),this._controller.router.go("dashboard",{historyUpdate:"replace"}))}_validateBillingType(){return!!this.activityEnumArray.data.find(t=>t.value===this.activityId())}_validateBillingItem(){return!!this.laborItemEnumArray.data.find(t=>t.value===this.laborItemId())}onCloseButtonClick(){this._controller.router.go("dashboard",{historyUpdate:"replace"})}}}});