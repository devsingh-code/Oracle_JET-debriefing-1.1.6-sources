"use strict";define(["knockout","utils/dom","ojs/ojarraydataprovider","ojs/ojinputsearch","ojs/ojinputnumber","ojs/ojlistview","ojs/ojformlayout","ojs/ojselectcombobox","ojs/ojvalidationgroup","utils/ko-text-highlighted-binding"],function(t,e,i){return function(){return new class{handleActivated(e){this._controller=e.valueAccessor().params.app,this.partActivityUsedEnumCollection=this._controller.partActivityUsedEnumCollection,this.activityId=t.observable(""),this.searchSubstring=t.observable(""),this.serialNum=t.observable(""),this.selectedSerialInvId=t.observable(),this.selectMessagesCustomSerial=t.observable([]),this.selectMessagesCustomBillingType=t.observable([]),this.searchSubstringDebounced=t.pureComputed(()=>this.searchSubstring()).extend({rateLimit:250}),this.searchSubstringIsEmpty=t.pureComputed(()=>this.searchSubstringDebounced().length<=0),this.searchResults=t.computed(()=>this._controller.inventorySearchService.searchBySubstring(this.searchSubstringDebounced()).map(t=>this.getInventoryViewModel(t)).slice(0,20)),this.invTypePart=this._controller.getInvTypePartConst(),this.invTypePartSN=this._controller.getInvTypePartSnConst(),this.searchResultsObservableArray=t.observableArray(),this.searchResultsSubscription=this.searchResults.subscribe(t=>{this.searchResultsObservableArray(t)}),this.searchResultsDataProvider=new oj.ArrayDataProvider(this.searchResultsObservableArray,{keyAttributes:["id","invsn"]}),this.listViewSelection=t.observable([]),this.listViewSelection.subscribe(t=>{if(t&&1===t.length){let e=t[0][0],r=t[0][1],s=this.searchResults().find(t=>t.id===e&&t.invsn===r);if(s.inventory.get("invtype")===this.invTypePartSN){if(!(s.inventory.get("quantity")>0))return void this._controller.errorAlertPopup("Critical Error",e+"("+r+") is not available in your inventory. Please update your inventory with this item and proceed.");if(this.invSerialNumArray=new i(this._controller.resourcePartsCollection.filter(t=>t.get("part_item_number_rev")===e&&t.get("quantity")>0&&null!==t.get("invsn")).map(t=>({value:t.get("invsn"),label:t.get("invsn")})),{keyAttributes:"value"}),this.serialNum(r),0===this.invSerialNumArray.data.length)return void this._controller.errorAlertPopup("Critical Error",e+" is not available in your inventory. Please update your inventory with this item and proceed.");this.invSerialNumArray.data.sort((t,e)=>t.value.localeCompare(e.value))}s&&this.selectedInventory(s)}}),this.dataValidation={detail:"Enter a valid value.",summary:"",severity:"error"},this.selectedInventory=t.observable(null),this.selectedIventoryMeasureUnit=t.pureComputed(()=>{let t=this.selectedInventory();return t&&this._controller.attributeDescription.part_uom_code&&this._controller.attributeDescription.part_uom_code.enum&&t.inventory.get("part_uom_code")&&this._controller.attributeDescription.part_uom_code.enum[t.inventory.get("part_uom_code")]?this._controller.attributeDescription.part_uom_code.enum[t.inventory.get("part_uom_code")].text:""}),this.activityEnumArray=new i(this.partActivityUsedEnumCollection.map(t=>({value:t.get("id"),label:t.get("text")})),{keyAttributes:"value"}),this.activityId(this.activityEnumArray.data[0].value),this.quantity=t.observable(1)}getInventoryViewModel(t){let e="";return this._controller.attributeDescription.part_uom_code&&this._controller.attributeDescription.part_uom_code.enum&&this._controller.attributeDescription.part_uom_code.enum[t.get("part_uom_code")]&&(e=this._controller.attributeDescription.part_uom_code.enum[t.get("part_uom_code")].text),""!==e&&(e=" "+e),{id:t.get("part_item_number_rev"),invsn:t.get("invsn"),inventory:t,measuredQuantity:`${t.get("quantity")}${e}`,dispositionText:t.get("part_disposition_code")&&this._controller.attributeDescription.part_disposition_code&&this._controller.attributeDescription.part_disposition_code.enum&&this._controller.attributeDescription.part_disposition_code.enum[t.get("part_disposition_code")]&&this._controller.attributeDescription.part_disposition_code.enum[t.get("part_disposition_code")].text}}submit(){const t=this._controller.checkValidationGroup(),e=!this._isSerializedInventory()||this._validateSerialNum(this.serialNum),i=this._validateBillingType(this.activityId);if(t&&!i&&this.selectMessagesCustomBillingType([this.dataValidation]),t&&!e&&this.selectMessagesCustomSerial([this.dataValidation]),t&&e&&i){let t=this.selectedInventory().inventory,e=this.quantity(),i=null;""!=this.serialNum()&&(i=this.serialNum()),this._controller.addUsedPart(t.get("part_item_number_rev"),this.activityId(),e,i),this._controller.router.go("dashboard",{historyUpdate:"replace"})}}_validateSerialNum(){return!!this.invSerialNumArray.data.find(t=>t.value===this.serialNum())}_validateBillingType(){return!!this.activityEnumArray.data.find(t=>t.value===this.activityId())}_isSerializedInventory(){return this.selectedInventory().inventory.get("invtype")===this.invTypePartSN}handleAttached(t){}handleBindingsApplied(t){e.resetScrolling()}handleDetached(t){this.searchResultsSubscription&&this.searchResultsSubscription.dispose&&this.searchResultsSubscription.dispose(),this.searchResultsSubscription=null,this.activityId("")}dismiss(){this.selectedInventory()?(this.listViewSelection([]),this.selectedInventory(null)):this._controller.router.go("dashboard",{historyUpdate:"replace"})}}}});